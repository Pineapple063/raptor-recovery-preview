@font-face {
    font-family: 'articoblack_italic';
    src: url('fonts/artico_black_italic.woff2') format('woff2'),
         url('fonts/artico_black_italic.woff') format('woff');
    font-weight: normal;
    font-style: normal;

}

.color-seperator-s {
    width: 80%;
    display: flex;
    margin-inline: auto;
    margin-top: 5rem;
    margin-bottom: 5rem;
}
  
.color-seperator-s::before {
    content: "";
    display: inline-block;
    width: 50%;
    height: 2px;
    background-color: #FBB721;
    margin-right: 1px;
    margin-bottom: 0.5rem;
}

.color-seperator-s::after {
    content: "";
    display: inline-block;
    width: 50%;
    height: 2px;
    background-color: #000000;
    margin-left: 1px;
    margin-bottom: 0.5rem;
}

.services-container-s {
    display: flex;
    flex-direction: column;
    
}

.services-header-s {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 200px;
    background-color: #FBB721;
    font-size: clamp(1.5rem, 14vw, 3rem);
    font-weight: 900;
    color: #000;
    margin-bottom: 2rem;
    font-family: 'articoblack_italic', sans-serif;
    font-style: italic;
    width: 100%;
}

.glitch-word {
    position: relative;
    display: inline-block; /* Allows words to stack vertically if needed, wraps content */
    font-size: clamp(1.5rem, 14vw, 5rem); /* Adjust size as needed */
    line-height: 1; /* Crucial for clip-path % to work relative to text height */
    margin: 0; /* Remove default margin */
    padding: 0; /* Remove default padding */
    /* Hide the original text content if you only use pseudo-elements */
    /* If using the element itself as one layer, set its color here */
    color: transparent; /* Hide the base element's text */
    width: 100%;
    text-align: center;
    margin-inline: auto;
}

/* Define colors using CSS variables for easier management */
.glitch-word.services {
    --glitch-color: #000; 
    margin-bottom: 0px; 
}

.glitch-word.recovery {
    --glitch-color: #1A2E5A; /* Dark Blue */
}


.glitch-word::before,
.glitch-word::after {
    content: attr(data-text); /* Get text from data-text attribute */
    position: absolute;
    top: 0;
    left: 0;
    color: var(--glitch-color); /* Use the defined color variable */
    /* Ensure pseudo-elements inherit font properties */
    font-size: inherit;
    font-weight: inherit;
    line-height: inherit;
    font-family: inherit;
    width: 100%;
    /* Optional: Add slight noise/roughness */
    /* text-shadow: -1px -1px 0 currentColor, 1px 1px 0 currentColor; */
}

.glitch-word::before {
    /* This will be the top, shifted part */
    /* clip-path: inset(top right bottom left) */
    /* Clip from the bottom up, leaving the top part */
    /* Adjust the percentage (e.g., 55%) to control the split line height */
    clip-path: inset(0 0 50% 0);
    transform: translateX(-2px); /* Shift the top part right */
    z-index: 2; /* Ensure it's above the bottom part */
    width: 100%;

    /* Optional: Add subtle text shadows for jagged edges */
    /* text-shadow: -2px 2px 0 currentColor, 2px 2px 0 currentColor; */
}

.glitch-word::after {
    /* This will be the bottom part */
    /* Clip from the top down, leaving the bottom part */
    clip-path: inset(50% 0 0 0);
    /* No transform needed for the base/bottom part relative to its position */
    z-index: 1; /* Ensure it's below the top part */
    width: 100%;
    /* Optional: Add subtle text shadows for jagged edges */
    /* text-shadow: -2px -2px 0 currentColor, 2px -2px 0 currentColor; */
}

.service-container-grid {
    display: grid;
    grid-template-columns: repeat(2, 1fr);
    padding-inline: 2rem;
    gap: 2rem;
}

.services-content-s {
    transition: all 0.3s ease-in-out;

}
  
.services-content-s.fade-in {
    opacity: 1;
}
  
.services-content-s.fade-out {
    opacity: 0;
}

.service-image-container-s {
    display: flex;
    height: 100%;
    width: 100%;
    justify-content: center;
    align-items: center;
}

.service-image-container-s img {
    width: 100%;
    height: 100%;
    max-width: 500px;
    object-fit: contain;
    object-position: center;
    max-height: 50vh;

}

.service-title-s {
    font-size: clamp(1.5rem, 10vw, 3rem);
    font-family: 'articoblack_italic', sans-serif;
    font-weight: 900;
    font-style: italic;
    margin-bottom: 2rem;
    color: #000;
    text-align: left;
    
}

.service-detail-title-s {
    font-size: clamp(0.5rem, 5vw, 1.3rem);
    font-weight: 700;
    color: #232323;
    margin-bottom: 0.5rem;
}

.service-detail-s {
    color: #787878;
}

@media (max-width: 1024px) { 
    .service-container-grid {
        grid-template-columns: 1fr;
        
    }

    .service-image-container-s img {

        
        height: 100%;
        object-fit: contain;
        object-position: center;
        max-height: 30vh;
        min-height: 20vh;
    }

    .service-title-s {
        
        text-align: center;
    
    }

}